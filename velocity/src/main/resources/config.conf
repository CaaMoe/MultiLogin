###########################################################################
#             这里是 MultiLogin 的主配置文件, 格式使用 "HOCON"
#
#      访问 "https://github.com/lightbend/config/blob/master/HOCON.md"
#   可了解有关 HOCON 配置文件格式的过多信息.
#
#     问题和建议反馈请前往 "https://github.com/CaaMoe/MultiLogin/issues".
###########################################################################

# 是否将 Debug 级别的日志重定向为 Info 级别的日志.
# 一般情况下维持默认值就好, 除非你想排查关于这个插件的一些问题.
#
# 默认值 false
debug: false

# 名称相关的设定.
profile_name_setting: {

  # 所生成的新档案的名字如果过长, 是否从尾部自动截短名称(原版 MC 不让名字超过 16 个字符的档案游戏).
  #
  # 例子:
  #  1. 如果生成的档案名字为 "Baka_YourName_Baka",   根据规则, 它将被截短为 ”Baka_YourName_Ba“
  #  2. 如果生成的档案名字为 "12345678901234567890", 根据规则, 它将被截短为 ”1234567890123456“
  #
  # 如果此项配置被关闭, 当生成了个新的档案给用户时只要名字超过 16 个字符, 将拒绝当前玩家登录游戏. 除非它手动更改自己的用户名.
  #
  # 默认值 true
  auto_cutting: true

  # 所生成的新档案的名字如果已被别的档案占用, 是否自动给它的档案名称后面 +1.
  #
  # 例子:
  #  1. 如果生成的档案名字重复, 为 "Steven",    根据规则, 它将被调整为 "Steven1"
  #  2. 如果生成的档案名字重复, 为 "Steven456", 根据规则, 它将被调整为 "Steven456"
  #  3. 如果生成的档案名字重复, 为 "Steven459", 根据规则, 它将被调整为 "Steven460"
  #  4. 如果生成的档案名字重复, 为 "Steven999", 根据规则, 它将被调整为 "Steven1000"
  #
  # 如果调整后的名字过长, 他将会在 "中间截短(截短递增体之前的部分)"
  # 中间截短例子:
  #  1. 如果 +1 后的名称过长, 为 "Steven78901234567", 根据规则, 它将被截短为 "Steve78901234567"
  #  2. 如果 +1 后的名称过长, 为 "12345678901234567", 根据规则, 它将被截短为 "2345678901234567"
  # 当然, 如果截短后的名称依然已被使用, 它将返回第一步重新计算, 直到腾出一个可用的用户名出来.
  #
  # 如果此项配置被关闭, 当生成了个新的档案给新用户时只要名字异常占用, 将拒绝当前玩家登录游戏. 除非它手动更改自己的用户名.
  #
  # 默认值 true
  auto_increment: true

  # 设置用户名正则.
  # 若不匹配将会拒绝指令或当前玩家的登录请求.
  # 如果此值留空, 则不启用此功能.
  #
  # 默认值 "^[0-9a-zA-Z_]{3,16}$"
  allowed_regular: "^[0-9a-zA-Z_]{3,16}$"
}


# 数据库设置.
# 在这里, 设置插件的数据库.
database: {

  # 数据库所连接的数据源.
  # 参数可以参考 "https://github.com/brettwooldridge/HikariCP" 项目介绍中的 "Configuration (knobs, baby!)".
  #
  # 需要注意的是, 配置键名需要严格按照 "下划线命名法", 比如你需要将 "driverClassName"、"jdbcUrl"
  # 等键名称手动更改为 "driver_class_name"、"jdbc_url".
  data_source: {
    pool_name: "MultiLoginPool"
  }
}