###########################################################################
#             这里是 MultiLogin 的 service 完整示例文件, 格式使用 "HOCON"
#
#      访问 "https://github.com/lightbend/config/blob/master/HOCON.md"
#   可了解有关 HOCON 配置文件格式的过多信息.
#
#     问题和建议反馈请前往 "https://github.com/CaaMoe/MultiLogin/issues".
###########################################################################

# service 的 id, 通常用于识别 service 的唯一性.
#
#   注意: 每个 service 之间的这个值不可重复, 重复将会导致数据乱, 也不要在使用中途调整这个值.
# 胡乱更改这个值都将导致特别严重的后果!!!
#
# 必须值, 值范围为整数 [0, 127]
service_id: -1

# service 的名字, 用于信息显示.
#
# 这个值不像 service_id 那样, 你可以在中途随意改动它, 甚至加上颜色字符 '§'.
#
# 可选值, 默认 "Unnamed"
service_name: "Unnamed"

# 设置使用当前 service 登录的玩家首次加入到服务器时所生成的档案 uuid 规则.
# 可用的选项:
#
# - "service":  此值表示使用 service 提供的 uuid 作为新生成的档案 uuid
# - "offline":  此值表示使用 service 提供的 username 生成离线 uuid 来作为新生成的档案 uuid
# - "random":   此值表示使用随机的 uuid 作为新生成的档案 uuid
#
# 可选值, 默认 "service"
profile_uuid_generate_type: ""

# 设置使用当前 service 登录的玩家首次加入到服务器时所生成的档案 username 模板.
# 其中 {name} 将替换成 service 提供的 username.
#
# 例子:
#  1. 如果这个值为 "Baka_{name}", 那么新档案生成出来的 username 前缀将固定为 "Baka_", 比如 "Baka_YourName".
#  2. 如果这个值为 "{name}_Baka", 那么新档案生成出来的 username 后缀将固定为 "_Baka", 比如 "YourName_Baka".
#  3. 如果这个值为 "Baka_{name}_Baka", 那么新档案生成出来的 username 前后缀将固定为 "_Baka", 比如 "Baka_YourName_Baka".
#  4. 如果这个值为 "{name}_{name}", 那么新档案生成出来的 username 将会重复, 比如 "YourName_YourName".
#
# 关于例子 4 所生成的名称 "Baka_YourName_Baka", 它可能超过最大名字字符上限(上限 16 字符), 它将会从尾部截短, 比如 "Baka_YourName_Ba".
#
# 可选值, 默认 "{name}"
profile_name_generate_format: "{name}"

# 当前 service 进来的玩家是否需要验证白名单
#
# 可选值, 默认 "false"
whitelist: false


# service 的类型.
# 可用的选项:
#
# - "official":                  此值表示官方的正版验证(Yggdrasil 类型).
# - "blessing_skin_yggdrasil":   此值表示 Blessing Skin 皮肤站插件市场中 Yggdrasil api("https://blessing.netlify.app/yggdrasil-api/") 提供的验证(Yggdrasil 类型).
# - "custom_yggdrasil":          (高级设定) 表示自定义的 Yggdrasil 提供的验证(Yggdrasil 类型).
# - "floodgate":                 此值表示基岩版通过 floodgate(https://github.com/GeyserMC/Floodgate) 提供的验证.
#
# 必须值, 其中 official 和 floodgate 要求在每个 service 之间唯一.
service_type: ""

# service 类型为 yggdrasil 的一些额外设定.
yggdrasil_service_setting: {

  # 阻止客户端使用代理加入服务器.
  #
  # 可选值, 默认 "true"
  prevent_proxy: true

  # 请求 yggdrasil 的超时时间设置.
  # 请注意, 过大的值可能会导致登录超时.
  #
  # 可选值, 默认 7000
  timeout: 7000

  # 请求 yggdrasil 的最大重试次数.
  # 请注意, 过大的值可能会导致登录超时.
  #
  # 可选值, 默认 0
  retry: 0

  # 请求 yggdrasil 的重试延迟时间.
  # 请注意, 过大的值可能会导致登录超时.
  #
  # 可选值, 默认 0
  delay_retry: 0
}

# service 类型为 blessing_skin_yggdrasil 的一些额外设定.
blessing_skin_yggdrasil_service_setting: {

  # 配置 Blessing Skin 皮肤站的 Yggdrasil api 地址
  # 参考 "https://blessing.netlify.app/yggdrasil-api/setup.html"
  #
  # 必须值.
  yggdrasil_api_root: ""
}

# service 类型为 custon_yggdrasil 的一些额外设定.
custom_yggdrasil_service_setting: {

  # 指定 hasjoined 请求的方式.
  # 可用的选项:
  #
  # - "get":    hasJoined 时使用 get 请求 yggdrasil api 的方式来验证有效会话.
  # - "post":   hasJoined 时使用 post 请求 yggdrasil api 的方式来验证有效会话.
  #
  # 必须值.
  hasjoined_request_mode: ""

  # 指定 hasjoined 请求链接.
  #
  # 示例链接:
  # - "https://example.com/session/minecraft/hasJoined"
  # - "https://sessionserver.mojang.com/session/minecraft/hasJoined"
  #
  # 必须值.
  hasjoined_url: ""

  # 指定 hasjoined 请求的参数.
  #
  # 以下变量 "{username}" 将替换成请求验证会话的角色名字
  # 以下变量 "{serverId}" 将替换成请求验证会话的服务器ID
  # 以下变量 "{playerIp}" 将替换成请求验证会话的客户端IP
  # 变量替换后如果值为空, 默认舍弃这个参数.
  #
  # 键可增, 如果请求为 post, 它将以 application/json 的方式请求到世界树服务器.
  # 可选值, 如果你不知道这是什么, 请不要随意改动它.
  request_parameters: {
    username: "{username}"
    serverId: "{serverId}"
    ip: "{playerIp}"
  }
}