# =========================================================
# ‚öôÔ∏è Database Settings
# =========================================================
# Path to the HikariCP database configuration file.
# Example: "hikari.properties"
# Default: "hikari.properties"
database-config = "hikari.properties"


# =========================================================
# üîê Authentication Settings
# =========================================================
# Select the authentication mode for this server.
#
# Available options:
#
#   local  - Use local (Mojang/online) authentication.
#            ‚Üí Requires this server to run in online mode.
#
#   remote - Use a remote authentication service.
#            ‚Üí Requires this server to enable "accepts-transfers".
#              Players log in to the remote server for identity verification,
#              then connect to this server via a transfer protocol.
#
# Default: "local"
auth-mode = "local"


# =========================================================
# üåê Remote Authentication Services
# =========================================================
# Define one or more remote authentication service configurations.
# Only used when `auth-mode` is set to "remote".
#
# Each entry supports the following fields:
#
#   id (Required)
#     Unique identifier for the remote service.
#     - Only lowercase letters, digits, and underscores allowed.
#     - Maximum length: 64 characters.
#     Example: "offline_auth"
#
#   display-name (Required)
#     Display name shown to players.
#     - Uses MiniMessage format.
#     - The '¬ß' symbol is not allowed.
#     Example: "<gold>Offline Auth</gold>"
#
#   public-key-path (Required)
#     Path to the public key file of the remote authentication service.
#     Example: "keys/offline_auth_public.pem"
#
#   uuid-init-policy (Optional)
#     Rule for generating the UUID of the initial profile.
#     Options:
#       - random  ‚Üí Generate a random UUID.
#       - offline ‚Üí Generate an offline-mode UUID.
#       - inherit ‚Üí Keep the original UUID.
#     Default: "inherit"
#
#   name-init-format (Optional)
#     Format string for generating the initial profile name.
#     Variables:
#       - %name% ‚Üí Original player name
#     Example: "offline_%name%"
#     Default: "%name%"
#
#   uuid-conflict-policy (Optional)
#     Behavior when a UUID conflict occurs while creating the first profile.
#     Options:
#       - random ‚Üí Generate a new random UUID.
#       - reject ‚Üí Prevent the player from logging in.
#     Default: "random"
#
#   name-conflict-policy (Optional)
#     Behavior when a name conflict occurs while creating the first profile.
#     Options:
#       - increment-right-truncate
#           Add a number (starting from 1) after the name.
#           If a number already exists, increment it until available.
#           If the name exceeds the limit,
#           truncate characters from the **rightmost non-numeric part**.
#
#       - increment-left-truncate
#           Add a number (starting from 1) after the name.
#           If a number already exists, increment it until available.
#           If the name exceeds the limit,
#           truncate characters from the **leftmost part**.
#
#       - increment
#           Add a number (starting from 1) after the name.
#           If a number already exists, increment it until available.
#           If the name exceeds the limit, reject directly.
#
#       - reject
#           Prevent the player from logging in.
#     Default: "increment-right-truncate"
#
# Empty list ‚Üí No remote authentication services are configured.
# Default: []
remote-auth-services = [

]


# =========================================================
# üß© Local Authentication Service
# =========================================================
# Configuration for the local authentication service.
# Only used when `auth-mode` is set to "local".
#
# Unlike remote authentication services, this configuration
# does **not** require a `public-key-path` field.
local-auth-service = {

  # id (Required)
  #   Unique identifier for this local authentication service.
  #   Example: "local_auth"
  #   Default: "local_auth"
  id = "local_auth"

  # display-name (Required)
  #   Display name shown to players.
  #   Supports MiniMessage format.
  #   Example: "<green>Local Authentication</green>"
  #   Default: "Unnamed Authentication"
  display-name = "Unnamed Authentication"

  # uuid-init-policy (Optional)
  #   Policy for generating or inheriting UUIDs.
  #   Options:
  #     - random  ‚Üí Generate a random UUID.
  #     - offline ‚Üí Generate an offline-mode UUID.
  #     - inherit ‚Üí Keep the original UUID.(online uuid)
  #   Default: "inherit"
  uuid-init-policy = "inherit"

  # name-format (Optional)
  #   Format string for the player's initial profile name.
  #   Example: "%name%"
  #   Default: "%name%"
  name-init-format = "%name%"

  # uuid-conflict-policy (Optional)
  #   Behavior when a UUID conflict occurs.
  #   Options:
  #     - random ‚Üí Generate a new random UUID.
  #     - reject ‚Üí Prevent the player from logging in.
  #   Default: "random"
  uuid-conflict-policy = "random"

  # name-conflict-policy (Optional)
  #   Behavior when a name conflict occurs.
  #   Options:
  #     - increment-right-truncate
  #     - increment-left-truncate
  #     - increment
  #     - reject
  #   Default: "increment-right-truncate"
  name-conflict-policy = "increment-right-truncate"
}
