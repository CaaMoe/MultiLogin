# =========================================================
# ⚙️ 数据库设置 (Database Settings)
# =========================================================
# 指定 HikariCP 数据库配置文件路径. 
# 用于配置数据库连接池参数. 
# 示例: "hikari.properties"
# 默认值: "hikari.properties"
database-config-path = "hikari.properties"


# =========================================================
# 🔐 身份验证模式 (Authentication Mode)
# =========================================================
# 选择此服务器的玩家身份验证模式. 
#
# 可用选项: 
#
#   local  → 使用本地验证(例如 online-mode 或 authlib-injector). 
#             需要启用服务器的 "online-mode". 
#             (插件会强制启用 online-mode, 即使你在 server.properties 中设置为 false)
#             玩家可直接连接至本服务器. 
#
#   remote → 使用远程验证服务. 
#             需要服务器启用 "accepts-transfers". 
#             玩家先在远程验证服务器登录成功, 
#             然后通过 transfer 协议携带签名 Cookie 中转至本服务器. 
#
#   mixed  → 同时支持本地与远程验证. 
#             需要服务器同时启用 "online-mode" 与 "accepts-transfers". 
#             玩家既可直接登录本地, 也可通过远程验证登录. 
#
# 默认值: "local"
auth-mode = "local"


# =========================================================
# 🧩 本地身份验证服务 (Local Authentication Service)
# =========================================================
# 本地身份验证服务的配置. 
# 仅当 `auth-mode` 为 "local" 或 "mixed" 时生效.
#
# ⚠️ 注意：
#   此处仅包含必要字段与基础信息.
#   若你希望覆盖默认的策略(如 UUID、名称冲突处理等),
#   可复制 `default-auth-service-option` 节点中的相关字段并粘贴修改.
local-auth-service = {

  # ---------------------------------------------------------
  # 基本信息 (Basic Information)
  # ---------------------------------------------------------

  # 本地身份验证服务的唯一标识符. 
  # 示例: "local_auth"
  # 必填字段, 且必须在所有服务中唯一.
  #
  # ⚠️ 注意: 此字段设置成功后请勿更改, 否则将导致用户角色数据丢失.
  id = "local_auth"

  # 向玩家显示的身份验证服务名称. 
  # 支持 MiniMessage 格式. 
  # 示例: "<green>本地验证</green>"
  # 默认值: "<green>Unnamed Authentication</green>"
  display-name = "<green>Unnamed Authentication</green>"
}


# =========================================================
# 🌐 默认身份验证服务选项 (Default Auth Service Option)
# =========================================================
# 该节点为所有身份验证服务提供默认策略.
# 若服务未单独设置相应字段, 将自动使用此处定义的默认值.
#
# ✅ 如果你想让 local-auth-service 或 remote-auth-service 使用自定义策略,
#    请将以下对应字段复制到目标服务节点内并进行修改.
default-auth-service-option = {

  # ---------------------------------------------------------
  # UUID 策略
  # ---------------------------------------------------------
  # 初始角色的 UUID 生成策略.
  # 可选项:
  #   - random  → 生成随机 UUID.
  #   - offline → 生成离线模式 UUID.
  #   - inherit → 保留原始 UUID.
  # 默认值: "inherit"
  uuid-init-policy = "inherit"

  # 当尝试生成初始角色的 UUID 冲突时的处理策略.
  # 可选项:
  #   - random → 生成新的随机 UUID.
  #   - reject → 拒绝玩家登录.
  # 默认值: "random"
  uuid-conflict-policy = "random"


  # ---------------------------------------------------------
  # 名称策略
  # ---------------------------------------------------------
  # 初始角色的名称格式字符串.
  # 占位符:
  #   %name% → 玩家原始名称
  # 示例: "%name%"
  # 默认值: "%name%"
  name-init-format = "%name%"

  # 当尝试生成初始角色的名称冲突时的处理策略.
  # 可选项:
  #   - increment-right-truncate → 名称末尾递增数字, 递增后过长将从右侧截断.
  #   - increment-left-truncate  → 名称末尾递增数字, 递增后过长将从左侧截断.
  #   - increment                → 名称末尾递增数字(不截断), 递增后过长将拒绝玩家登录.
  #   - reject                   → 拒绝玩家登录.
  # 默认值: "increment-right-truncate"
  name-conflict-policy = "increment-right-truncate"


  # ---------------------------------------------------------
  # 白名单控制
  # ---------------------------------------------------------
  # 是否启用白名单.
  # 启用后, 通过此验证方式登录的玩家仅持有效白名单才可连接到此服务器.
  # 默认值: false
  whitelist = false
}


# =========================================================
# ⚙️ 其他配置 (Miscellaneous Settings)
# =========================================================

# 是否禁用在接收到客户端登录请求(Hello 包)时的用户名规范检查.
# 若禁用, 将跳过用户名格式校验.
# 用户名规范要求:
#   - 名称不能为空;
#   - 长度 ≤ 16;
#   - 仅允许字母、数字、下划线(_)、小数点(.);
# ⚠️ 注意: 禁用此检查可能导致异常玩家名或潜在安全风险.
disable-hello-packet-username-validation = false


# 是否启用"快速重连(reconnect)"特性.
# 启用后, 当玩家: 
#   - 游戏内改名; 
#   - 或切换角色导致断开; 
# 将自动通过 transfer 协议重新连接服务器, 
# 而无需手动重新登录.
reconnect-feature-enable = true
