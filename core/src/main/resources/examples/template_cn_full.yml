#####################################################################
#
#  配置文件格式为 ‘YAML’，前往 ‘https://yaml.org/’ 查阅 YAML 配置语法
#         NOTE: 此文件为 Yggdrasil Service 配置模板文件
#
#    BUG REPORTS:   https://github.com/CaaMoe/MultiLogin/issues
#
#####################################################################

#####################################################################
#
#       注意，除了布尔值和整数、浮点数之外的配置，请使用引号包裹起来。
#
#          请不要在此文件下存放任何重要数据，文件将会自动覆盖！！
#         此文件为中文完整示例文件，使用请复制到 services 目录下才能生效
#
#####################################################################


# 此验证服务的 ID，用于识别验证服务的唯一标识。
# 它不可以是重复的值，重复的值会导致数据错乱或丢失！！！
#
# 警告，请不要在使用中途更改它的值，更改它将会导致部分玩家的数据错乱或丢失！！！
# 此值为必须值，取值范围为整数 0 ~ 127
id: -1

# 验证服务的别称，用于一些指令结果或其他用途的内容显示。
#
# 默认值 ‘Unnamed’
name: 'Unnamed'

# 验证服务类型，目前
#
# 请使用以下值:
#    OFFICIAL                      - 官方 Yggdrasil Java 版账号验证服务（Yggdrasil 实现）。
#    BLESSING_SKIN                 - Blessing Skin 的伪正版验证服务（Yggdrasil 实现）。
#    CUSTOM_YGGDRASIL              - 自定义 Yggdrasil 伪正版验证服务（Yggdrasil 实现）。
#    FLOODGATE                     - Geyser 的 Floodgate （Xbox账号）验证服务。
serviceType: OFFICIAL

# Yggdrasil 类型账号验证服务配置。
#
# 仅当 serviceType 为 任意Yggdrasil类型 时此值有效。
yggdrasilAuth:

  # Yggdrasil 在 hasJoined 阶段时请求是否追加用户 IP 信息。
  # 此 IP 一般用于 Yggdrasil 的防代理检查。
  #
  # 理论上，开启了这个，服务器和玩家只要有一方开了代理访问验证服务器，
  # 在玩家登录时 Yggdrasil 都会返回无效的会话而被拒绝登录。
  #
  # 本地测试时请保持此值为 false，否则可能返回无效的会话的登录结果。
  #
  # 默认值 ‘false’
  trackIp: false

  # 设置 Yggdrasil hasJoined 验证超时时间。
  #
  # 仅当 serviceType 为 任意Yggdrasil类型 时此值有效。
  # 默认值 ‘10000’
  timeout: 10000

  # 设置 Yggdrasil hasJoined 网络错误时的重试次数。
  #
  # 默认值 ‘0’
  retry: 0

  # 设置 Yggdrasil hasJoined 重试请求延迟。
  # 注意，过大的值可能会导致登录超时。
  #
  # 默认值 ‘0’
  retryDelay: 0

  # OFFCIAL 专用设置。
  #
  # 仅当 serviceType 为 OFFICIAL 时，此配置片段有效。
  official:

    # 可选，指定自定义 Session 验证服务器地址。
    sessionServer: 'https://sessionserver.example.com'

  # BLESSING_SKIN 专用设置。
  #
  # 仅当 serviceType 为 BLESSING_SKIN 时，此配置片段有效。
  blessingSkin:

    # 指定 Blessing Skin Yggdrasil API 地址。
    apiRoot: 'https://example.com/api/yggdrasil'

  # CUSTOM_YGGDRASIL 专用设置。
  #
  # 仅当 serviceType 为 CUSTOM_YGGDRASIL 时，此配置片段有效。
  custom:

    # 设置 Yggdrasil hasJoined 请求验证链接设置。
    # 此节点需要指定完整的 hasJoined 请求链接。
    #
    # 占位变量列表：
    #   序号     别称            简介
    #   {0}      {username}    请求的 username
    #   {1}      {serverId}    请求的 serverId
    #   {2}      {ip}          请求的 ip（ipContent 节点值）
    #
    # 一些例子:
    #      GET:  ‘https://example.com/session/minecraft/hasJoined?username={username}&serverId={serverId}{ip}’
    #      GET:  ‘https://example.com/session/minecraft/hasJoined?username={0}&serverId={1}{2}’
    #      GET:  ‘https://example.com/session/minecraft/hasJoined?username={username}&serverId={serverId}’
    #      POST: ‘https://example.com/session/minecraft/hasJoined’
    #
    # 仅当 serviceType 为 CUSTOM_YGGDRASIL 时此值有效。
    # 必须值。
    url: 'https://example.com/session/minecraft/hasJoined?username={0}&serverId={1}{2}'

    # 设置 Yggdrasil hasJoined 请求验证方式。
    #
    # 请使用以下值:
    # GET      - 此方式被绝大多数验证服务器（包括官方）采用。
    # POST     - 此方式被极少数验证服务器采用。
    #
    # 仅当 serviceType 为 CUSTOM_YGGDRASIL 时此值有效。
    # 必须值。
    method: 'GET'

    # 设置 Yggdrasil hasJoined 的 url 和 postContent 节点 {ip} 变量内容。
    # 此节点作用是使 ip 信息正常拼接到请求块中去。
    #
    # 占位变量列表：
    #   序号     别称           简介
    #   {0}     {ip}           请求的 ip（玩家 ip）
    #
    # 请注意，仅当 trackIp 节点为 ‘true’ 时此节点有效。
    # 请求的 URL 对大小写敏感，请检查。
    # 请留意字符串拼接的特殊值 '&' 和 ', '
    #
    # 一些例子:
    #      GET:  ‘&ip={ip}’
    #      POST: ‘, "ip":"{0}"’
    #
    # 仅当 serviceType 为 CUSTOM_YGGDRASIL 时此值有效。
    # 必须值。
    trackIpContent: '&ip={0}'

    # 设置 Yggdrasil hasJoined 发送 POST 验证请求的内容。
    # 目标验证服务器对请求内容的大小写敏感，请检查。
    #
    # 占位变量列表：
    #   序号     别称           简介
    #   {0}      {username}    请求的 username
    #   {1}      {serverId}    请求的 serverId
    #   {2}      {ip}          请求的 ip（ipContent 节点值）
    #
    # 一些例子:
    #        ‘{"username":"{username}", "serverId":"{serverId}"{ip}}’
    #        ‘{"username":"{username}", "serverId":"{serverId}"}’
    #
    # 仅当 serviceType 为 CUSTOM_YGGDRASIL 时此值有效。
    # 且当 yggdrasilAuthMethod 值为 ’POST‘ 时，此值为必须值。
    postContent: '{"username":"{0}", "serverId":"{1}"}'

  # 设置 Yggdrasil hasJoined 代理。
  authProxy:

    # 指定代理类型
    #
    # 请使用以下值:
    #     DIRECT      - 直接连接、或没有代理
    #     HTTP        - 表示高级协议(如HTTP或FTP)的代理。
    #     SOCKS       - 表示一个SOCKS (V4或V5)代理。
    #
    # 默认值 ‘DIRECT’
    type: "DIRECT"

    # 代理服务器地址
    #
    # 默认值 ‘127.0.0.1’
    hostname: "127.0.0.1"

    # 代理服务器端口
    #
    # 默认值 ‘1080’
    port: 1080

    # 代理鉴权用户名。
    # 留空则不进行鉴权
    #
    # 默认值 ‘’
    username: ""

    # 代理鉴权密码。
    #
    # 默认值 ‘’
    password: ""

# 设置玩家第一次登录到这个服务器时，系统所分配给玩家的 UUID 生成规则。
#
# 请使用以下值:
#    DEFAULT      - 使用验证服务提供的在线 UUID
#    OFFLINE      - 使用玩家名字获取到的离线 UUID
#    RANDOM       - 随机 UUID
#
# 请谨慎设置和修改此节点，避免增加日后维护的心智负担。
# 默认值 ‘DEFAULT’
initUUID: 'DEFAULT'

# 设置玩家第一次登录到这个服务器时，系统所分配给玩家的 Name 生成模板。
#
# 例子:
#   "BE_{name}", 当玩家 Steve445 第一次通过此 service 进来时，系统将分配 “BE_Steve445” 用户名给他。
#
# 搭配 nameCorrect 使用可以做到以下效果:
#   如果 initNameFormat 值为 xxx10001, 则分配到的用户名将会从xxx10001递增到xxx99999, 比如(xxx10001, xxx10002, xxx10003), 但是溢出的话就会变成xxx100000
#   如果 initNameFormat 值为 空, 则分配到的用户名全是数字id, 用户名从 1 开始递增到无穷大
#
# 默认值 ’{name}‘
initNameFormat: '{name}'

# 是否为当前验证服务的玩家单独开启白名单功能。
#
# 默认值 ‘false’
whitelist: false

# 皮肤修复设定。
skinRestorer:

  # 皮肤修复模式。
  #
  # 此功能仅将不含有 Mojang 签名的皮肤使用第三方服务尝试合成含有 Mojang 签名的皮肤来使用。
  # 请使用以下值:
  #   OFF       - 关闭这个功能
  #   LOGIN     - 占用登录时间进行皮肤修复操作（修复时间过长可能会导致登录超时）
  #   ASYNC     - 登录后修复（修复成功后需要重新连接服务器）
  #
  # 皮肤修复服务器来自 ‘mineskin.org’
  # 默认值 ‘OFF’
  restorer: 'OFF'

  # 皮肤修复方式。
  #
  # 请使用以下值:
  #   URL        - 皮肤修复服务器将会主动获取验证返回的皮肤数据，请确保它能被皮肤修复服务器正确访问。（推荐使用）
  #   UPLOAD     - 尝试直接上传至皮肤修复服务器，适用于皮肤修复服务器访问皮肤材质受阻的情况。
  #
  # 默认值 ‘URL’
  method: 'URL'

  # 设置请求超时时间。
  # 默认值 ‘10000’
  timeout: 10000

  # 皮肤修复网络错误时的重试次数。
  #
  # 默认值 ‘2’
  retry: 2

  # 皮肤修复重试请求延迟。
  # 过小的值会被皮肤修复服务器拒绝访问；
  # 过大的值可能会导致登录超时。
  #
  # 默认值 ‘5000’
  retryDelay: 5000

  # 请求代理设置
  proxy:
    # 设置代理类型
    #
    # 请使用以下值:
    #     DIRECT      - 直接连接、或没有代理
    #     HTTP        - Represents proxy for high level protocols such as HTTP or FTP.
    #     SOCKS       - Represents a SOCKS (V4 or V5) proxy.
    #
    # 默认值 ‘DIRECT’
    type: "DIRECT"

    # 代理服务器地址
    #
    # 默认值 ‘127.0.0.1’
    hostname: "127.0.0.1"

    # 代理服务器端口
    #
    # 默认值 ‘1080’
    port: 1080

    # 代理鉴权用户名。
    # 留空则不进行鉴权
    #
    # 默认值 ‘’
    username: ""

    # 代理鉴权密码。
    #
    # 默认值 ‘’
    password: ""
